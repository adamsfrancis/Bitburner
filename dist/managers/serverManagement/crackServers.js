import { readAndParse } from "/lib/helpers";
import { globalFiles } from "/lib/constants";
async function getCurrentServerStates(ns) {
    const curServerMap = await readAndParse(ns, globalFiles.serverMap);
    return curServerMap;
}
async function getProgressFlags(ns) {
    try {
        const curProgressFlags = await readAndParse(ns, globalFiles.progressFlags);
        return curProgressFlags;
    }
    catch {
        const curProgressFlags = { allBruteSSH: false, allFTPCrack: false, allHTTPWorm: false, allRelaySMTP: false, allSQLInject: false };
        return curProgressFlags;
    }
}
async function updateProgressFlags(ns) {
    const curProgressFlags = await getProgressFlags(ns);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JhY2tTZXJ2ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL21hbmFnZXJzL3NlcnZlck1hbmFnZW1lbnQvY3JhY2tTZXJ2ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDNUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzdDLEtBQUssVUFBVSxzQkFBc0IsQ0FBQyxFQUFLO0lBQ3ZDLE1BQU0sWUFBWSxHQUF1QixNQUFNLFlBQVksQ0FBc0IsRUFBRSxFQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUMxRyxPQUFPLFlBQVksQ0FBQztBQUN4QixDQUFDO0FBRUQsS0FBSyxVQUFVLGdCQUFnQixDQUFDLEVBQUs7SUFDakMsSUFBRztRQUNILE1BQU0sZ0JBQWdCLEdBQWlCLE1BQU0sWUFBWSxDQUFnQixFQUFFLEVBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3ZHLE9BQU8sZ0JBQWdCLENBQUM7S0FDdkI7SUFBQyxNQUFNO1FBQ0osTUFBTSxnQkFBZ0IsR0FBaUIsRUFBQyxXQUFXLEVBQUMsS0FBSyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsV0FBVyxFQUFDLEtBQUssRUFBQyxZQUFZLEVBQUMsS0FBSyxFQUFDLFlBQVksRUFBQyxLQUFLLEVBQUMsQ0FBQztRQUNySSxPQUFPLGdCQUFnQixDQUFDO0tBQzNCO0FBRUwsQ0FBQztBQUVELEtBQUssVUFBVSxtQkFBbUIsQ0FBQyxFQUFLO0lBQ3BDLE1BQU0sZ0JBQWdCLEdBQWlCLE1BQU0sZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFdEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBidWlsZFRvb2xLaXQgfSBmcm9tIFwiL21hbmFnZXJzL3NlcnZlck1hbmFnZW1lbnQvYnVpbGRUb29sS2l0XCI7XHJcbmltcG9ydCB7IHNlcnZlck9iamVjdCB9IGZyb20gXCIvY2xhc3Nlcy9jbGFzc1NlcnZlclwiO1xyXG5pbXBvcnQgeyByZWFkQW5kUGFyc2UgfSBmcm9tIFwiL2xpYi9oZWxwZXJzXCI7XHJcbmltcG9ydCB7IGdsb2JhbEZpbGVzIH0gZnJvbSBcIi9saWIvY29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IHByb2dyZXNzRmxhZ3MgfSBmcm9tIFwiL2xpYi90eXBlc1wiO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0Q3VycmVudFNlcnZlclN0YXRlcyhuczpOUyk6UHJvbWlzZTxBcnJheTxzZXJ2ZXJPYmplY3Q+PntcclxuICAgIGNvbnN0IGN1clNlcnZlck1hcDpBcnJheTxzZXJ2ZXJPYmplY3Q+ID0gYXdhaXQgcmVhZEFuZFBhcnNlPEFycmF5PHNlcnZlck9iamVjdD4+KG5zLGdsb2JhbEZpbGVzLnNlcnZlck1hcClcclxuICAgIHJldHVybiBjdXJTZXJ2ZXJNYXA7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFByb2dyZXNzRmxhZ3MobnM6TlMpOlByb21pc2U8cHJvZ3Jlc3NGbGFncz57XHJcbiAgICB0cnl7XHJcbiAgICBjb25zdCBjdXJQcm9ncmVzc0ZsYWdzOnByb2dyZXNzRmxhZ3MgPSBhd2FpdCByZWFkQW5kUGFyc2U8cHJvZ3Jlc3NGbGFncz4obnMsZ2xvYmFsRmlsZXMucHJvZ3Jlc3NGbGFncyk7XHJcbiAgICByZXR1cm4gY3VyUHJvZ3Jlc3NGbGFncztcclxuICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIGNvbnN0IGN1clByb2dyZXNzRmxhZ3M6cHJvZ3Jlc3NGbGFncyA9IHthbGxCcnV0ZVNTSDpmYWxzZSxhbGxGVFBDcmFjazpmYWxzZSxhbGxIVFRQV29ybTpmYWxzZSxhbGxSZWxheVNNVFA6ZmFsc2UsYWxsU1FMSW5qZWN0OmZhbHNlfTtcclxuICAgICAgICByZXR1cm4gY3VyUHJvZ3Jlc3NGbGFncztcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVQcm9ncmVzc0ZsYWdzKG5zOk5TKXtcclxuICAgIGNvbnN0IGN1clByb2dyZXNzRmxhZ3M6cHJvZ3Jlc3NGbGFncyA9IGF3YWl0IGdldFByb2dyZXNzRmxhZ3MobnMpO1xyXG5cclxufSJdfQ==