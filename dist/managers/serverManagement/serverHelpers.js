export function getFilteredServerMap(serverMap, serverProp, compOperator, value) {
    if (typeof value === 'number') {
        return filterByNumber(serverMap, serverProp, compOperator, value);
    }
    else {
        const filteredMap = serverMap.filter((currentServer) => currentServer[serverProp] === value);
        return filteredMap;
    }
}
function filterByNumber(serverMap, serverProp, compOperator, value) {
    const filteredMap = serverMap.filter((currentServer) => {
        switch (compOperator) {
            case '===':
                return currentServer[serverProp] === value;
            case '<':
                return currentServer[serverProp] < value;
            case '<=':
                return currentServer[serverProp] <= value;
            case '>':
                return currentServer[serverProp] > value;
            case '>=':
                return currentServer[serverProp] >= value;
        }
    });
    return filteredMap;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVySGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYW5hZ2Vycy9zZXJ2ZXJNYW5hZ2VtZW50L3NlcnZlckhlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0EsTUFBTSxVQUFVLG9CQUFvQixDQUFDLFNBQThCLEVBQUMsVUFBa0IsRUFBQyxZQUFnQyxFQUFDLEtBQWdDO0lBQ3BKLElBQUcsT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFDO1FBQ3pCLE9BQU8sY0FBYyxDQUFDLFNBQVMsRUFBQyxVQUFVLEVBQUMsWUFBWSxFQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2xFO1NBQU07UUFDSCxNQUFNLFdBQVcsR0FBdUIsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDO1FBQ2pILE9BQU8sV0FBVyxDQUFDO0tBQ3RCO0FBQ0wsQ0FBQztBQUVELFNBQVMsY0FBYyxDQUFDLFNBQThCLEVBQUMsVUFBa0IsRUFBQyxZQUFnQyxFQUFDLEtBQWE7SUFDcEgsTUFBTSxXQUFXLEdBQXdCLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBRTtRQUN4RSxRQUFPLFlBQVksRUFBQztZQUNSLEtBQUssS0FBSztnQkFDTixPQUFPLGFBQWEsQ0FBQyxVQUFVLENBQUMsS0FBSyxLQUFLLENBQUM7WUFDL0MsS0FBSyxHQUFHO2dCQUNKLE9BQU8sYUFBYSxDQUFDLFVBQVUsQ0FBVyxHQUFHLEtBQUssQ0FBQztZQUN2RCxLQUFLLElBQUk7Z0JBQ0wsT0FBTyxhQUFhLENBQUMsVUFBVSxDQUFXLElBQUksS0FBSyxDQUFDO1lBQ3hELEtBQUssR0FBRztnQkFDSixPQUFPLGFBQWEsQ0FBQyxVQUFVLENBQVcsR0FBRyxLQUFLLENBQUM7WUFDdkQsS0FBSyxJQUFJO2dCQUNMLE9BQU8sYUFBYSxDQUFDLFVBQVUsQ0FBVyxJQUFJLEtBQUssQ0FBQztTQUMzRDtJQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxXQUFXLENBQUM7QUFDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlcnZlck9iamVjdCB9IGZyb20gXCIvY2xhc3Nlcy9jbGFzc1NlcnZlclwiO1xyXG5pbXBvcnQgeyBDb21wYXJpc29uT3BlcmF0b3IgfSBmcm9tIFwiL2xpYi90eXBlc1wiO1xyXG5cclxuXHJcbi8qKiBAUkFNIDAgR0IgKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZpbHRlcmVkU2VydmVyTWFwKHNlcnZlck1hcDogQXJyYXk8c2VydmVyT2JqZWN0Piwgc2VydmVyUHJvcDogc3RyaW5nLCBjb21wT3BlcmF0b3I6ICc9PT0nLCBib29sVmFsdWU6IGJvb2xlYW4pOiBBcnJheTxzZXJ2ZXJPYmplY3Q+O1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsdGVyZWRTZXJ2ZXJNYXAoc2VydmVyTWFwOiBBcnJheTxzZXJ2ZXJPYmplY3Q+LCBzZXJ2ZXJQcm9wOiBzdHJpbmcsIGNvbXBPcGVyYXRvcjogJzwnIHwgJzw9JyB8ICc+JyB8ICc+PScsIG51bWJlclZhbHVlOiBudW1iZXIpOiBBcnJheTxzZXJ2ZXJPYmplY3Q+O1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RmlsdGVyZWRTZXJ2ZXJNYXAoc2VydmVyTWFwOiBBcnJheTxzZXJ2ZXJPYmplY3Q+LCBzZXJ2ZXJQcm9wOiBzdHJpbmcsIGNvbXBPcGVyYXRvcjogJz09PScsIHN0cmluZ1ZhbHVlOiBzdHJpbmcpOiBBcnJheTxzZXJ2ZXJPYmplY3Q+O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZpbHRlcmVkU2VydmVyTWFwKHNlcnZlck1hcDogQXJyYXk8c2VydmVyT2JqZWN0PixzZXJ2ZXJQcm9wOiBzdHJpbmcsY29tcE9wZXJhdG9yOiBDb21wYXJpc29uT3BlcmF0b3IsdmFsdWU6IGJvb2xlYW4gfCBudW1iZXIgfCBzdHJpbmcpOiBBcnJheTxzZXJ2ZXJPYmplY3Q+IHtcclxuICAgIGlmKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpe1xyXG4gICAgICAgIHJldHVybiBmaWx0ZXJCeU51bWJlcihzZXJ2ZXJNYXAsc2VydmVyUHJvcCxjb21wT3BlcmF0b3IsdmFsdWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBmaWx0ZXJlZE1hcDpBcnJheTxzZXJ2ZXJPYmplY3Q+ID0gc2VydmVyTWFwLmZpbHRlcigoY3VycmVudFNlcnZlcikgPT4gY3VycmVudFNlcnZlcltzZXJ2ZXJQcm9wXSA9PT0gdmFsdWUpO1xyXG4gICAgICAgIHJldHVybiBmaWx0ZXJlZE1hcDtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZmlsdGVyQnlOdW1iZXIoc2VydmVyTWFwOiBBcnJheTxzZXJ2ZXJPYmplY3Q+LHNlcnZlclByb3A6IHN0cmluZyxjb21wT3BlcmF0b3I6IENvbXBhcmlzb25PcGVyYXRvcix2YWx1ZTogbnVtYmVyKXtcclxuICAgIGNvbnN0IGZpbHRlcmVkTWFwOiBBcnJheTxzZXJ2ZXJPYmplY3Q+ID0gc2VydmVyTWFwLmZpbHRlcigoY3VycmVudFNlcnZlcikgPT4ge1xyXG4gICAgICAgIHN3aXRjaChjb21wT3BlcmF0b3Ipe1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJz09PSc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50U2VydmVyW3NlcnZlclByb3BdID09PSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICc8JzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRTZXJ2ZXJbc2VydmVyUHJvcF0gYXMgbnVtYmVyIDwgdmFsdWU7IFxyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJzw9JzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRTZXJ2ZXJbc2VydmVyUHJvcF0gYXMgbnVtYmVyIDw9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJz4nOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudFNlcnZlcltzZXJ2ZXJQcm9wXSBhcyBudW1iZXIgPiB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlICc+PSc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50U2VydmVyW3NlcnZlclByb3BdIGFzIG51bWJlciA+PSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBmaWx0ZXJlZE1hcDtcclxuICAgICAgICB9Il19