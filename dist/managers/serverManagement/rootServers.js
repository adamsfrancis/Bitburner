import { readAndParse } from "/lib/helpers";
import { globalFiles } from "/lib/constants";
import { getFilteredServerMap } from "/managers/serverManagement/serverHelpers";
/** @RAM 0 GB */
export async function allServersRooted(ns) {
    const curServerMap = await readAndParse(ns, globalFiles.serverMap);
    return curServerMap.every((adminRights) => adminRights.hasAdminRights === false);
}
/** @RAM 0.05 GB */
export async function rootWhatWeCan(ns) {
    const curServerMap = await readAndParse(ns, globalFiles.serverMap);
    const filteredByAdminRights = await getFilteredServerMap(curServerMap, 'hasAdminRights', '===', false);
    for (const currentServer of filteredByAdminRights) {
        if (currentServer.numOpenPortsRequired !== undefined &&
            currentServer.openPortCount !== undefined &&
            currentServer.numOpenPortsRequired <= currentServer.openPortCount) {
            await ns.nuke(currentServer.hostName);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdFNlcnZlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbWFuYWdlcnMvc2VydmVyTWFuYWdlbWVudC9yb290U2VydmVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzVDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUVoRixnQkFBZ0I7QUFDaEIsTUFBTSxDQUFDLEtBQUssVUFBVSxnQkFBZ0IsQ0FBQyxFQUFLO0lBQ3hDLE1BQU0sWUFBWSxHQUF1QixNQUFNLFlBQVksQ0FBQyxFQUFFLEVBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RGLE9BQU8sWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUFDLGNBQWMsS0FBSyxLQUFLLENBQUMsQ0FBQztBQUNyRixDQUFDO0FBRUQsbUJBQW1CO0FBQ25CLE1BQU0sQ0FBQyxLQUFLLFVBQVUsYUFBYSxDQUFDLEVBQUs7SUFDckMsTUFBTSxZQUFZLEdBQXVCLE1BQU0sWUFBWSxDQUFDLEVBQUUsRUFBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdEYsTUFBTSxxQkFBcUIsR0FBdUIsTUFBTSxvQkFBb0IsQ0FBQyxZQUFZLEVBQUMsZ0JBQWdCLEVBQUMsS0FBSyxFQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hILEtBQUksTUFBTSxhQUFhLElBQUkscUJBQXFCLEVBQUM7UUFDN0MsSUFBRyxhQUFhLENBQUMsb0JBQW9CLEtBQUssU0FBUztZQUMvQyxhQUFhLENBQUMsYUFBYSxLQUFLLFNBQVM7WUFDekMsYUFBYSxDQUFDLG9CQUFvQixJQUFJLGFBQWEsQ0FBQyxhQUFhLEVBQUM7WUFDOUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN6QztLQUNSO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5TIH0gZnJvbSBcIkBuc1wiO1xyXG5pbXBvcnQgeyBzZXJ2ZXJPYmplY3QgfSBmcm9tIFwiL2NsYXNzZXMvY2xhc3NTZXJ2ZXJcIjtcclxuaW1wb3J0IHsgcmVhZEFuZFBhcnNlIH0gZnJvbSBcIi9saWIvaGVscGVyc1wiO1xyXG5pbXBvcnQgeyBnbG9iYWxGaWxlcyB9IGZyb20gXCIvbGliL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBnZXRGaWx0ZXJlZFNlcnZlck1hcCB9IGZyb20gXCIvbWFuYWdlcnMvc2VydmVyTWFuYWdlbWVudC9zZXJ2ZXJIZWxwZXJzXCI7XHJcblxyXG4vKiogQFJBTSAwIEdCICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhbGxTZXJ2ZXJzUm9vdGVkKG5zOk5TKTpQcm9taXNlPGJvb2xlYW4+e1xyXG4gICAgY29uc3QgY3VyU2VydmVyTWFwOkFycmF5PHNlcnZlck9iamVjdD4gPSBhd2FpdCByZWFkQW5kUGFyc2UobnMsZ2xvYmFsRmlsZXMuc2VydmVyTWFwKTtcclxuICAgIHJldHVybiBjdXJTZXJ2ZXJNYXAuZXZlcnkoKGFkbWluUmlnaHRzKSA9PiBhZG1pblJpZ2h0cy5oYXNBZG1pblJpZ2h0cyA9PT0gZmFsc2UpO1xyXG59XHJcblxyXG4vKiogQFJBTSAwLjA1IEdCICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByb290V2hhdFdlQ2FuKG5zOk5TKTpQcm9taXNlPHZvaWQ+e1xyXG4gICAgY29uc3QgY3VyU2VydmVyTWFwOkFycmF5PHNlcnZlck9iamVjdD4gPSBhd2FpdCByZWFkQW5kUGFyc2UobnMsZ2xvYmFsRmlsZXMuc2VydmVyTWFwKTtcclxuICAgIGNvbnN0IGZpbHRlcmVkQnlBZG1pblJpZ2h0czpBcnJheTxzZXJ2ZXJPYmplY3Q+ID0gYXdhaXQgZ2V0RmlsdGVyZWRTZXJ2ZXJNYXAoY3VyU2VydmVyTWFwLCdoYXNBZG1pblJpZ2h0cycsJz09PScsZmFsc2UpO1xyXG4gICAgZm9yKGNvbnN0IGN1cnJlbnRTZXJ2ZXIgb2YgZmlsdGVyZWRCeUFkbWluUmlnaHRzKXtcclxuICAgICAgICBpZihjdXJyZW50U2VydmVyLm51bU9wZW5Qb3J0c1JlcXVpcmVkICE9PSB1bmRlZmluZWQgJiYgXHJcbiAgICAgICAgICAgIGN1cnJlbnRTZXJ2ZXIub3BlblBvcnRDb3VudCAhPT0gdW5kZWZpbmVkICYmIFxyXG4gICAgICAgICAgICBjdXJyZW50U2VydmVyLm51bU9wZW5Qb3J0c1JlcXVpcmVkIDw9IGN1cnJlbnRTZXJ2ZXIub3BlblBvcnRDb3VudCl7XHJcbiAgICAgICAgICAgICAgICBhd2FpdCBucy5udWtlKGN1cnJlbnRTZXJ2ZXIuaG9zdE5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19