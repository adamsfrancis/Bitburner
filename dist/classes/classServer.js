export class serverObject {
    backdoorInstalled;
    baseDifficulty;
    cpuCores;
    ftpPortOpen = false;
    hackDifficulty;
    hasAdminRights = false;
    hostName;
    httpPortOpen = false;
    isConnectedTo = false;
    ramMax;
    minDifficulty;
    moneyAvailable;
    moneyMax;
    numOpenPortsRequired;
    openPortCount;
    purchasedByPlayer = false;
    ramUsed;
    requiredHackingSkill;
    serverGrowth;
    smtpPortOpen = false;
    sqlPortOpen = false;
    sshPortOpen = false;
    parentServer;
    ramAvailable;
    constructor(data, parentServer) {
        /** @param {boolean} backdoorInstalled - (Optional) Flag indicating whether this server has a backdoor installed by a player. */
        this.backdoorInstalled = data.backdoorInstalled ?? false;
        /** @param {number} baseDifficulty - (Optional) Server's initial server security level at creation, used to calculate hacking XP, higher is better. Default is -1 if not available. */
        this.baseDifficulty = data.baseDifficulty ?? 0;
        /** @param {number} cpuCores - How many CPU cores this server has. Affects magnitude of grow and weaken ran from this server. */
        this.cpuCores = data.cpuCores;
        this.ftpPortOpen = data.ftpPortOpen;
        /** @param {number} hackDifficulty - (Optional) Server Security Level */
        this.hackDifficulty = data.hackDifficulty ?? 0;
        this.hasAdminRights = data.hasAdminRights;
        this.hostName = data.hostname;
        this.httpPortOpen = data.httpPortOpen;
        this.isConnectedTo = data.isConnectedTo;
        this.ramMax = data.maxRam;
        /** @param {number} minDifficulty - (Optional) Minimum server security level that this server can be weakened to. 999999 is default if not available. */
        this.minDifficulty = data.minDifficulty ?? 999999;
        /** @param {number} moneyAvailable - (Optional) How much money currently resides on the server and can be hacked. -1 is default if not available. */
        this.moneyAvailable = data.moneyAvailable ?? -1;
        this.moneyMax = data.moneyMax;
        this.numOpenPortsRequired = data.numOpenPortsRequired;
        this.openPortCount = data.openPortCount;
        this.purchasedByPlayer = data.purchasedByPlayer;
        this.ramUsed = data.ramUsed;
        /** @param {number} requiredHackingSkill - (Optional) Hacking level required to hack this server. 999999 is default if not available. */
        this.requiredHackingSkill = data.requiredHackingSkill ?? 999999;
        /** @param {number} serverGrowth - (Optional) Growth effectiveness statistic. -1 is default if not available. */
        this.serverGrowth = data.serverGrowth ?? -1;
        this.smtpPortOpen = data.smtpPortOpen;
        this.sqlPortOpen = data.sqlPortOpen;
        this.sshPortOpen = data.sshPortOpen;
        this.ramAvailable = data.maxRam - data.ramUsed ?? 0;
        /** @param {string} parentServer - Taken during scan, the server above this one in the hierarchy. */
        this.parentServer = parentServer;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3NTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xhc3Nlcy9jbGFzc1NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sWUFBWTtJQUNyQixpQkFBaUIsQ0FBVztJQUM1QixjQUFjLENBQVU7SUFDeEIsUUFBUSxDQUFVO0lBQ2xCLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDcEIsY0FBYyxDQUFVO0lBQ3hCLGNBQWMsR0FBRyxLQUFLLENBQUM7SUFDdkIsUUFBUSxDQUFVO0lBQ2xCLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDckIsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUN0QixNQUFNLENBQVU7SUFDaEIsYUFBYSxDQUFVO0lBQ3ZCLGNBQWMsQ0FBVTtJQUN4QixRQUFRLENBQVU7SUFDbEIsb0JBQW9CLENBQVU7SUFDOUIsYUFBYSxDQUFVO0lBQ3ZCLGlCQUFpQixHQUFHLEtBQUssQ0FBQztJQUMxQixPQUFPLENBQVU7SUFDakIsb0JBQW9CLENBQVU7SUFDOUIsWUFBWSxDQUFVO0lBQ3RCLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDckIsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUNwQixXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQ3BCLFlBQVksQ0FBVTtJQUN0QixZQUFZLENBQVU7SUFHdEIsWUFBWSxJQUFXLEVBQUUsWUFBZ0M7UUFFakQsZ0lBQWdJO1FBQ2hJLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsaUJBQWlCLElBQUksS0FBSyxDQUFDO1FBQ3pELHNMQUFzTDtRQUN0TCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDO1FBQy9DLGdJQUFnSTtRQUNoSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQ3BDLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUMxQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDMUIsd0pBQXdKO1FBQ3hKLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxNQUFNLENBQUM7UUFDbEQsb0pBQW9KO1FBQ3BKLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztRQUN0RCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDeEMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNoRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDNUIsd0lBQXdJO1FBQ3hJLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsb0JBQW9CLElBQUksTUFBTSxDQUFDO1FBQ2hFLGdIQUFnSDtRQUNoSCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUNwQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDO1FBQ2xELG9HQUFvRztRQUNwRyxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUN6QyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2ZXIgfSBmcm9tIFwiQG5zXCI7XHJcblxyXG5leHBvcnQgY2xhc3Mgc2VydmVyT2JqZWN0e1xyXG4gICAgYmFja2Rvb3JJbnN0YWxsZWQ/OiBib29sZWFuO1xyXG4gICAgYmFzZURpZmZpY3VsdHk/OiBudW1iZXI7XHJcbiAgICBjcHVDb3JlcyE6IG51bWJlcjtcclxuICAgIGZ0cFBvcnRPcGVuID0gZmFsc2U7XHJcbiAgICBoYWNrRGlmZmljdWx0eT86IG51bWJlcjtcclxuICAgIGhhc0FkbWluUmlnaHRzID0gZmFsc2U7XHJcbiAgICBob3N0TmFtZSE6IHN0cmluZztcclxuICAgIGh0dHBQb3J0T3BlbiA9IGZhbHNlO1xyXG4gICAgaXNDb25uZWN0ZWRUbyA9IGZhbHNlO1xyXG4gICAgcmFtTWF4ITogbnVtYmVyO1xyXG4gICAgbWluRGlmZmljdWx0eT86IG51bWJlcjtcclxuICAgIG1vbmV5QXZhaWxhYmxlPzogbnVtYmVyO1xyXG4gICAgbW9uZXlNYXg/OiBudW1iZXI7XHJcbiAgICBudW1PcGVuUG9ydHNSZXF1aXJlZD86IG51bWJlcjtcclxuICAgIG9wZW5Qb3J0Q291bnQ/OiBudW1iZXI7XHJcbiAgICBwdXJjaGFzZWRCeVBsYXllciA9IGZhbHNlO1xyXG4gICAgcmFtVXNlZCE6IG51bWJlcjtcclxuICAgIHJlcXVpcmVkSGFja2luZ1NraWxsPzogbnVtYmVyO1xyXG4gICAgc2VydmVyR3Jvd3RoPzogbnVtYmVyO1xyXG4gICAgc210cFBvcnRPcGVuID0gZmFsc2U7XHJcbiAgICBzcWxQb3J0T3BlbiA9IGZhbHNlO1xyXG4gICAgc3NoUG9ydE9wZW4gPSBmYWxzZTtcclxuICAgIHBhcmVudFNlcnZlcj86IHN0cmluZztcclxuICAgIHJhbUF2YWlsYWJsZSE6IG51bWJlcjtcclxuICAgIFtrZXk6IHN0cmluZ106IHVua25vd247XHJcblxyXG4gICAgY29uc3RydWN0b3IoZGF0YTpTZXJ2ZXIsIHBhcmVudFNlcnZlcjogc3RyaW5nIHwgdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvKiogQHBhcmFtIHtib29sZWFufSBiYWNrZG9vckluc3RhbGxlZCAtIChPcHRpb25hbCkgRmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgdGhpcyBzZXJ2ZXIgaGFzIGEgYmFja2Rvb3IgaW5zdGFsbGVkIGJ5IGEgcGxheWVyLiAqL1xyXG4gICAgICAgICAgICB0aGlzLmJhY2tkb29ySW5zdGFsbGVkID0gZGF0YS5iYWNrZG9vckluc3RhbGxlZCA/PyBmYWxzZTtcclxuICAgICAgICAgICAgLyoqIEBwYXJhbSB7bnVtYmVyfSBiYXNlRGlmZmljdWx0eSAtIChPcHRpb25hbCkgU2VydmVyJ3MgaW5pdGlhbCBzZXJ2ZXIgc2VjdXJpdHkgbGV2ZWwgYXQgY3JlYXRpb24sIHVzZWQgdG8gY2FsY3VsYXRlIGhhY2tpbmcgWFAsIGhpZ2hlciBpcyBiZXR0ZXIuIERlZmF1bHQgaXMgLTEgaWYgbm90IGF2YWlsYWJsZS4gKi9cclxuICAgICAgICAgICAgdGhpcy5iYXNlRGlmZmljdWx0eSA9IGRhdGEuYmFzZURpZmZpY3VsdHkgPz8gMDtcclxuICAgICAgICAgICAgLyoqIEBwYXJhbSB7bnVtYmVyfSBjcHVDb3JlcyAtIEhvdyBtYW55IENQVSBjb3JlcyB0aGlzIHNlcnZlciBoYXMuIEFmZmVjdHMgbWFnbml0dWRlIG9mIGdyb3cgYW5kIHdlYWtlbiByYW4gZnJvbSB0aGlzIHNlcnZlci4gKi9cclxuICAgICAgICAgICAgdGhpcy5jcHVDb3JlcyA9IGRhdGEuY3B1Q29yZXM7XHJcbiAgICAgICAgICAgIHRoaXMuZnRwUG9ydE9wZW4gPSBkYXRhLmZ0cFBvcnRPcGVuO1xyXG4gICAgICAgICAgICAvKiogQHBhcmFtIHtudW1iZXJ9IGhhY2tEaWZmaWN1bHR5IC0gKE9wdGlvbmFsKSBTZXJ2ZXIgU2VjdXJpdHkgTGV2ZWwgKi9cclxuICAgICAgICAgICAgdGhpcy5oYWNrRGlmZmljdWx0eSA9IGRhdGEuaGFja0RpZmZpY3VsdHkgPz8gMDsgXHJcbiAgICAgICAgICAgIHRoaXMuaGFzQWRtaW5SaWdodHMgPSBkYXRhLmhhc0FkbWluUmlnaHRzO1xyXG4gICAgICAgICAgICB0aGlzLmhvc3ROYW1lID0gZGF0YS5ob3N0bmFtZTtcclxuICAgICAgICAgICAgdGhpcy5odHRwUG9ydE9wZW4gPSBkYXRhLmh0dHBQb3J0T3BlbjtcclxuICAgICAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZFRvID0gZGF0YS5pc0Nvbm5lY3RlZFRvO1xyXG4gICAgICAgICAgICB0aGlzLnJhbU1heCA9IGRhdGEubWF4UmFtO1xyXG4gICAgICAgICAgICAvKiogQHBhcmFtIHtudW1iZXJ9IG1pbkRpZmZpY3VsdHkgLSAoT3B0aW9uYWwpIE1pbmltdW0gc2VydmVyIHNlY3VyaXR5IGxldmVsIHRoYXQgdGhpcyBzZXJ2ZXIgY2FuIGJlIHdlYWtlbmVkIHRvLiA5OTk5OTkgaXMgZGVmYXVsdCBpZiBub3QgYXZhaWxhYmxlLiAqL1xyXG4gICAgICAgICAgICB0aGlzLm1pbkRpZmZpY3VsdHkgPSBkYXRhLm1pbkRpZmZpY3VsdHkgPz8gOTk5OTk5O1xyXG4gICAgICAgICAgICAvKiogQHBhcmFtIHtudW1iZXJ9IG1vbmV5QXZhaWxhYmxlIC0gKE9wdGlvbmFsKSBIb3cgbXVjaCBtb25leSBjdXJyZW50bHkgcmVzaWRlcyBvbiB0aGUgc2VydmVyIGFuZCBjYW4gYmUgaGFja2VkLiAtMSBpcyBkZWZhdWx0IGlmIG5vdCBhdmFpbGFibGUuICovXHJcbiAgICAgICAgICAgIHRoaXMubW9uZXlBdmFpbGFibGUgPSBkYXRhLm1vbmV5QXZhaWxhYmxlID8/IC0xO1xyXG4gICAgICAgICAgICB0aGlzLm1vbmV5TWF4ID0gZGF0YS5tb25leU1heDtcclxuICAgICAgICAgICAgdGhpcy5udW1PcGVuUG9ydHNSZXF1aXJlZCA9IGRhdGEubnVtT3BlblBvcnRzUmVxdWlyZWQ7XHJcbiAgICAgICAgICAgIHRoaXMub3BlblBvcnRDb3VudCA9IGRhdGEub3BlblBvcnRDb3VudDtcclxuICAgICAgICAgICAgdGhpcy5wdXJjaGFzZWRCeVBsYXllciA9IGRhdGEucHVyY2hhc2VkQnlQbGF5ZXI7XHJcbiAgICAgICAgICAgIHRoaXMucmFtVXNlZCA9IGRhdGEucmFtVXNlZDtcclxuICAgICAgICAgICAgLyoqIEBwYXJhbSB7bnVtYmVyfSByZXF1aXJlZEhhY2tpbmdTa2lsbCAtIChPcHRpb25hbCkgSGFja2luZyBsZXZlbCByZXF1aXJlZCB0byBoYWNrIHRoaXMgc2VydmVyLiA5OTk5OTkgaXMgZGVmYXVsdCBpZiBub3QgYXZhaWxhYmxlLiAqL1xyXG4gICAgICAgICAgICB0aGlzLnJlcXVpcmVkSGFja2luZ1NraWxsID0gZGF0YS5yZXF1aXJlZEhhY2tpbmdTa2lsbCA/PyA5OTk5OTk7XHJcbiAgICAgICAgICAgIC8qKiBAcGFyYW0ge251bWJlcn0gc2VydmVyR3Jvd3RoIC0gKE9wdGlvbmFsKSBHcm93dGggZWZmZWN0aXZlbmVzcyBzdGF0aXN0aWMuIC0xIGlzIGRlZmF1bHQgaWYgbm90IGF2YWlsYWJsZS4gKi9cclxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJHcm93dGggPSBkYXRhLnNlcnZlckdyb3d0aCA/PyAtMTtcclxuICAgICAgICAgICAgdGhpcy5zbXRwUG9ydE9wZW4gPSBkYXRhLnNtdHBQb3J0T3BlbjtcclxuICAgICAgICAgICAgdGhpcy5zcWxQb3J0T3BlbiA9IGRhdGEuc3FsUG9ydE9wZW47XHJcbiAgICAgICAgICAgIHRoaXMuc3NoUG9ydE9wZW4gPSBkYXRhLnNzaFBvcnRPcGVuO1xyXG4gICAgICAgICAgICB0aGlzLnJhbUF2YWlsYWJsZSA9IGRhdGEubWF4UmFtLWRhdGEucmFtVXNlZCA/PyAwO1xyXG4gICAgICAgICAgICAvKiogQHBhcmFtIHtzdHJpbmd9IHBhcmVudFNlcnZlciAtIFRha2VuIGR1cmluZyBzY2FuLCB0aGUgc2VydmVyIGFib3ZlIHRoaXMgb25lIGluIHRoZSBoaWVyYXJjaHkuICovXHJcbiAgICAgICAgICAgIHRoaXMucGFyZW50U2VydmVyID0gcGFyZW50U2VydmVyOyAgICAgICBcclxuICAgIH1cclxufSJdfQ==