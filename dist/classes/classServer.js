export class serverObject {
    backdoorInstalled;
    baseDifficulty;
    cpuCores;
    ftpPortOpen;
    hackDifficulty;
    hasAdminRights;
    hostName;
    httpPortOpen;
    isConnectedTo;
    ramMax;
    minDifficulty;
    moneyAvailable;
    moneyMax;
    numOpenPortsRequired;
    openPortCount;
    purchasedByPlayer;
    ramUsed;
    requiredHackingSkill;
    serverGrowth;
    smtpPortOpen;
    sqlPortOpen;
    sshPortOpen;
    parentServer;
    ramAvailable;
    filesAvailable;
    constructor(ns, data, parentServer) {
        this.backdoorInstalled = data.backdoorInstalled ?? false;
        this.baseDifficulty = data.baseDifficulty ?? 0;
        this.cpuCores = data.cpuCores;
        this.ftpPortOpen = data.ftpPortOpen;
        this.hackDifficulty = data.hackDifficulty ?? 999999;
        this.hasAdminRights = data.hasAdminRights;
        this.hostName = data.hostname;
        this.httpPortOpen = data.httpPortOpen;
        this.isConnectedTo = data.isConnectedTo;
        this.ramMax = data.maxRam;
        this.minDifficulty = data.minDifficulty ?? 999999;
        this.moneyAvailable = data.moneyAvailable ?? -1;
        this.moneyMax = data.moneyMax ?? -1;
        this.numOpenPortsRequired = data.numOpenPortsRequired;
        this.openPortCount = data.openPortCount;
        this.purchasedByPlayer = data.purchasedByPlayer;
        this.ramUsed = data.ramUsed;
        this.requiredHackingSkill = data.requiredHackingSkill ?? 999999;
        this.serverGrowth = data.serverGrowth ?? -1;
        this.smtpPortOpen = data.smtpPortOpen;
        this.sqlPortOpen = data.sqlPortOpen;
        this.sshPortOpen = data.sshPortOpen;
        this.ramAvailable = data.maxRam - data.ramUsed ?? 0;
        this.parentServer = parentServer;
        this.filesAvailable = ns.ls(data.hostname);
    }
    isPrepped() {
        return (this.hackDifficulty === this.minDifficulty && this.moneyAvailable === this.moneyMax);
    }
    needsGrow() {
        return (this.moneyAvailable !== this.moneyMax);
    }
    needsWeaken() {
        return (this.hackDifficulty !== this.minDifficulty);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3NTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xhc3Nlcy9jbGFzc1NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLE9BQU8sWUFBWTtJQUNyQixpQkFBaUIsQ0FBVztJQUM1QixjQUFjLENBQVU7SUFDeEIsUUFBUSxDQUFTO0lBQ2pCLFdBQVcsQ0FBVTtJQUNyQixjQUFjLENBQVM7SUFDdkIsY0FBYyxDQUFVO0lBQ3hCLFFBQVEsQ0FBUztJQUNqQixZQUFZLENBQVU7SUFDdEIsYUFBYSxDQUFVO0lBQ3ZCLE1BQU0sQ0FBUztJQUNmLGFBQWEsQ0FBUztJQUN0QixjQUFjLENBQVM7SUFDdkIsUUFBUSxDQUFTO0lBQ2pCLG9CQUFvQixDQUFVO0lBQzlCLGFBQWEsQ0FBVTtJQUN2QixpQkFBaUIsQ0FBVTtJQUMzQixPQUFPLENBQVM7SUFDaEIsb0JBQW9CLENBQVU7SUFDOUIsWUFBWSxDQUFVO0lBQ3RCLFlBQVksQ0FBVTtJQUN0QixXQUFXLENBQVU7SUFDckIsV0FBVyxDQUFVO0lBQ3JCLFlBQVksQ0FBVTtJQUN0QixZQUFZLENBQVM7SUFDckIsY0FBYyxDQUFVO0lBR3hCLFlBQVksRUFBSyxFQUFDLElBQVcsRUFBRSxZQUFnQztRQUV2RCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixJQUFJLEtBQUssQ0FBQztRQUN6RCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDcEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxJQUFJLE1BQU0sQ0FBQztRQUNwRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDMUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzlCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUN0QyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsSUFBSSxNQUFNLENBQUM7UUFDbEQsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDO1FBQ3RELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUNwQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUNNLFNBQVM7UUFDWixPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsS0FBSyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7SUFDTSxTQUFTO1FBQ1osT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFDTSxXQUFXO1FBQ2QsT0FBTyxDQUFDLElBQUksQ0FBQyxjQUFjLEtBQUssSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3hELENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlcnZlcixOUyB9IGZyb20gXCJAbnNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBzZXJ2ZXJPYmplY3R7XHJcbiAgICBiYWNrZG9vckluc3RhbGxlZD86IGJvb2xlYW47XHJcbiAgICBiYXNlRGlmZmljdWx0eT86IG51bWJlcjtcclxuICAgIGNwdUNvcmVzOiBudW1iZXI7XHJcbiAgICBmdHBQb3J0T3BlbjogYm9vbGVhbjtcclxuICAgIGhhY2tEaWZmaWN1bHR5OiBudW1iZXI7XHJcbiAgICBoYXNBZG1pblJpZ2h0czogYm9vbGVhbjtcclxuICAgIGhvc3ROYW1lOiBzdHJpbmc7XHJcbiAgICBodHRwUG9ydE9wZW46IGJvb2xlYW47XHJcbiAgICBpc0Nvbm5lY3RlZFRvOiBib29sZWFuO1xyXG4gICAgcmFtTWF4OiBudW1iZXI7XHJcbiAgICBtaW5EaWZmaWN1bHR5OiBudW1iZXI7XHJcbiAgICBtb25leUF2YWlsYWJsZTogbnVtYmVyO1xyXG4gICAgbW9uZXlNYXg6IG51bWJlcjtcclxuICAgIG51bU9wZW5Qb3J0c1JlcXVpcmVkPzogbnVtYmVyO1xyXG4gICAgb3BlblBvcnRDb3VudD86IG51bWJlcjtcclxuICAgIHB1cmNoYXNlZEJ5UGxheWVyOiBib29sZWFuO1xyXG4gICAgcmFtVXNlZDogbnVtYmVyO1xyXG4gICAgcmVxdWlyZWRIYWNraW5nU2tpbGw/OiBudW1iZXI7XHJcbiAgICBzZXJ2ZXJHcm93dGg/OiBudW1iZXI7XHJcbiAgICBzbXRwUG9ydE9wZW46IGJvb2xlYW47XHJcbiAgICBzcWxQb3J0T3BlbjogYm9vbGVhbjtcclxuICAgIHNzaFBvcnRPcGVuOiBib29sZWFuO1xyXG4gICAgcGFyZW50U2VydmVyPzogc3RyaW5nO1xyXG4gICAgcmFtQXZhaWxhYmxlOiBudW1iZXI7XHJcbiAgICBmaWxlc0F2YWlsYWJsZTpzdHJpbmdbXTtcclxuICAgIFtrZXk6IHN0cmluZ106IHVua25vd247XHJcblxyXG4gICAgY29uc3RydWN0b3IobnM6TlMsZGF0YTpTZXJ2ZXIsIHBhcmVudFNlcnZlcjogc3RyaW5nIHwgdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLmJhY2tkb29ySW5zdGFsbGVkID0gZGF0YS5iYWNrZG9vckluc3RhbGxlZCA/PyBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5iYXNlRGlmZmljdWx0eSA9IGRhdGEuYmFzZURpZmZpY3VsdHkgPz8gMDtcclxuICAgICAgICAgICAgdGhpcy5jcHVDb3JlcyA9IGRhdGEuY3B1Q29yZXM7XHJcbiAgICAgICAgICAgIHRoaXMuZnRwUG9ydE9wZW4gPSBkYXRhLmZ0cFBvcnRPcGVuO1xyXG4gICAgICAgICAgICB0aGlzLmhhY2tEaWZmaWN1bHR5ID0gZGF0YS5oYWNrRGlmZmljdWx0eSA/PyA5OTk5OTk7IFxyXG4gICAgICAgICAgICB0aGlzLmhhc0FkbWluUmlnaHRzID0gZGF0YS5oYXNBZG1pblJpZ2h0cztcclxuICAgICAgICAgICAgdGhpcy5ob3N0TmFtZSA9IGRhdGEuaG9zdG5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMuaHR0cFBvcnRPcGVuID0gZGF0YS5odHRwUG9ydE9wZW47XHJcbiAgICAgICAgICAgIHRoaXMuaXNDb25uZWN0ZWRUbyA9IGRhdGEuaXNDb25uZWN0ZWRUbztcclxuICAgICAgICAgICAgdGhpcy5yYW1NYXggPSBkYXRhLm1heFJhbTtcclxuICAgICAgICAgICAgdGhpcy5taW5EaWZmaWN1bHR5ID0gZGF0YS5taW5EaWZmaWN1bHR5ID8/IDk5OTk5OTtcclxuICAgICAgICAgICAgdGhpcy5tb25leUF2YWlsYWJsZSA9IGRhdGEubW9uZXlBdmFpbGFibGUgPz8gLTE7XHJcbiAgICAgICAgICAgIHRoaXMubW9uZXlNYXggPSBkYXRhLm1vbmV5TWF4ID8/IC0xO1xyXG4gICAgICAgICAgICB0aGlzLm51bU9wZW5Qb3J0c1JlcXVpcmVkID0gZGF0YS5udW1PcGVuUG9ydHNSZXF1aXJlZDtcclxuICAgICAgICAgICAgdGhpcy5vcGVuUG9ydENvdW50ID0gZGF0YS5vcGVuUG9ydENvdW50O1xyXG4gICAgICAgICAgICB0aGlzLnB1cmNoYXNlZEJ5UGxheWVyID0gZGF0YS5wdXJjaGFzZWRCeVBsYXllcjtcclxuICAgICAgICAgICAgdGhpcy5yYW1Vc2VkID0gZGF0YS5yYW1Vc2VkO1xyXG4gICAgICAgICAgICB0aGlzLnJlcXVpcmVkSGFja2luZ1NraWxsID0gZGF0YS5yZXF1aXJlZEhhY2tpbmdTa2lsbCA/PyA5OTk5OTk7XHJcbiAgICAgICAgICAgIHRoaXMuc2VydmVyR3Jvd3RoID0gZGF0YS5zZXJ2ZXJHcm93dGggPz8gLTE7XHJcbiAgICAgICAgICAgIHRoaXMuc210cFBvcnRPcGVuID0gZGF0YS5zbXRwUG9ydE9wZW47XHJcbiAgICAgICAgICAgIHRoaXMuc3FsUG9ydE9wZW4gPSBkYXRhLnNxbFBvcnRPcGVuO1xyXG4gICAgICAgICAgICB0aGlzLnNzaFBvcnRPcGVuID0gZGF0YS5zc2hQb3J0T3BlbjtcclxuICAgICAgICAgICAgdGhpcy5yYW1BdmFpbGFibGUgPSBkYXRhLm1heFJhbS1kYXRhLnJhbVVzZWQgPz8gMDtcclxuICAgICAgICAgICAgdGhpcy5wYXJlbnRTZXJ2ZXIgPSBwYXJlbnRTZXJ2ZXI7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsZXNBdmFpbGFibGUgPSBucy5scyhkYXRhLmhvc3RuYW1lKTsgICAgICBcclxuICAgIH1cclxuICAgIHB1YmxpYyBpc1ByZXBwZWQoKXtcclxuICAgICAgICByZXR1cm4gKHRoaXMuaGFja0RpZmZpY3VsdHkgPT09IHRoaXMubWluRGlmZmljdWx0eSAmJiB0aGlzLm1vbmV5QXZhaWxhYmxlID09PSB0aGlzLm1vbmV5TWF4KTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBuZWVkc0dyb3coKXtcclxuICAgICAgICByZXR1cm4gKHRoaXMubW9uZXlBdmFpbGFibGUgIT09IHRoaXMubW9uZXlNYXgpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIG5lZWRzV2Vha2VuKCl7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLmhhY2tEaWZmaWN1bHR5ICE9PSB0aGlzLm1pbkRpZmZpY3VsdHkpO1xyXG4gICAgfVxyXG59Il19